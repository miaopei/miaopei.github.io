<?xml version="1.0" encoding="UTF-8"?>  
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/06/09/WebRTC/01-%E5%AE%9E%E6%97%B6%E9%9F%B3%E8%A7%86%E9%A2%91%E4%BA%92%E5%8A%A8%E7%B3%BB%E5%88%97/</loc>  
      
    <lastmod>2024-06-18T06:38:33.648Z</lastmod>  
      
    <date>1560078890000</date>  
    <title>实时音视频互动系列 | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/06/07/WebRTC/webrtc%E7%9A%84%E8%A7%86%E9%A2%91%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF%E4%B9%8B%E5%BB%B6%E8%BF%9F%E6%8A%96%E5%8A%A8%E4%B8%8E%E4%B8%A2%E5%8C%85/</loc>  
      
    <lastmod>2024-06-18T06:36:50.199Z</lastmod>  
      
    <date>1559906090000</date>  
    <title>WebRTC视频统计信息之延迟抖动与丢包 | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/30/WebRTC/webrtc-src/</loc>  
      
    <lastmod>2024-06-18T06:16:42.482Z</lastmod>  
      
    <date>1559214890000</date>  
    <title>WebRTC 镜像源 | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/06/19/WebRTC/webrtc-%E4%B8%93%E9%A2%98-02/</loc>  
      
    <lastmod>2024-06-18T06:14:01.541Z</lastmod>  
      
    <date>1560943043000</date>  
    <title>webrtc-专题-02-WebRTC应用 | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/06/16/WebRTC/webrtc-%E4%B8%93%E9%A2%98-01/</loc>  
      
    <lastmod>2024-06-18T05:52:11.314Z</lastmod>  
      
    <date>1560683843000</date>  
    <title>webrtc-专题-01-WebRTC框架介绍 | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/10/09/WebRTC/mediaserver/</loc>  
      
    <lastmod>2024-06-18T05:38:30.642Z</lastmod>  
      
    <date>1570592354000</date>  
    <title>WebRTC 流媒体服务器（一） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/10/21/WebRTC/mediaserver-02/</loc>  
      
    <lastmod>2024-06-18T05:35:17.094Z</lastmod>  
      
    <date>1571623652000</date>  
    <title>WebRTC 流媒体服务器（三） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/10/12/WebRTC/mediaserver-01/</loc>  
      
    <lastmod>2024-06-18T05:32:05.835Z</lastmod>  
      
    <date>1570848963000</date>  
    <title>WebRTC 流媒体服务器（二） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/15/WebRTC/webrtc-02/</loc>  
      
    <lastmod>2024-06-17T09:03:12.916Z</lastmod>  
      
    <date>1557886490000</date>  
    <title>WebRTC（二） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/17/WebRTC/webrtc-03/</loc>  
      
    <lastmod>2024-06-17T09:03:12.916Z</lastmod>  
      
    <date>1558059290000</date>  
    <title>WebRTC（三） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/27/WebRTC/webrtc-opensrc/</loc>  
      
    <lastmod>2024-06-17T09:03:12.916Z</lastmod>  
      
    <date>1558955690000</date>  
    <title>WebRTC开源src | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/14/WebRTC/webrtc-01/</loc>  
      
    <lastmod>2024-06-17T09:03:12.909Z</lastmod>  
      
    <date>1557800090000</date>  
    <title>WebRTC（一） | Mr.Miaow Blog</title>  
      
    <desc>Welcome to my blog, enter password to read.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/05/16/Web/WebSocket%E6%95%99%E7%A8%8B/</loc>  
      
    <lastmod>2024-06-17T09:01:02.308Z</lastmod>  
      
    <date>1494915308000</date>  
    <title>WebSocket教程 | Mr.Miaow Blog</title>  
      
    <desc>转自阮一峰网络编程 WebSocket 是一种网络通信协议，很多高级功能都需要它。 1. 为什么需要 WebSocker初次接触 WebSocket 的人，都会问同样的问题：我们已经有了 HTTP 协议，为什么还需要另一个协议？它能带来什么好处？</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/04/10/Web/Webpack%E5%88%9B%E5%BB%BA%E8%BF%90%E8%A1%8Cvue-js%E9%A1%B9%E7%9B%AE%E5%8F%8A%E5%85%B6%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%AF%A6%E8%A7%A3/</loc>  
      
    <lastmod>2024-06-17T08:56:08.311Z</lastmod>  
      
    <date>1491819507000</date>  
    <title>Webpack创建、运行vue.js项目及其目录结构详解 | Mr.Miaow Blog</title>  
      
    <desc>项目环境搭建：1.安装node 进入node官网进行下载。 版本查看： 12$ node -vv6.10.1 **注意：**node版本最好新一点，推介6.0以上。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/03/16/Web/web-transmission-basis/</loc>  
      
    <lastmod>2024-06-17T08:45:29.221Z</lastmod>  
      
    <date>1521194572000</date>  
    <title>网络传输基础 | Mr.Miaow Blog</title>  
      
    <desc>理论上，视频或邮件信息是能够以大块非中断型流从网络源地址传送到目的地址，但这也意味着同一时刻同一网络其他设备就无法收发消息。这种大型数据流会造成显著延时。并且，如果传输过程中连接断开，整个数据流都会丢失需要全部重传。因此更好的方法是将数据流分割</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/09/20/Vim/VimNote/</loc>  
      
    <lastmod>2024-06-17T08:38:46.856Z</lastmod>  
      
    <date>1600592026000</date>  
    <title>Vim note | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/03/20/Vim/vimHotKey/</loc>  
      
    <lastmod>2024-06-17T08:36:04.569Z</lastmod>  
      
    <date>1521536026000</date>  
    <title>Vim 快捷键 | Mr.Miaow Blog</title>  
      
    <desc>vimplus github Vim使用笔记 利用ctags+cscope+taglist+nerdree+srcexpl+trinity 将 VIM 变成 source insight 1. 文档操作 :e – 重新加载当前文档。 :e! – 重新加载当前文档，并丢弃已做的改动。 :e file – 关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，vi 会警告。 :e! fil</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/03/23/Vim/vimProgramHotKey/</loc>  
      
    <lastmod>2024-06-17T08:36:04.569Z</lastmod>  
      
    <date>1521795226000</date>  
    <title>VIM 编程相关的常用快捷键 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/03/24/Vim/vim%E7%BC%96%E8%BE%91%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</loc>  
      
    <lastmod>2024-06-17T08:36:04.569Z</lastmod>  
      
    <date>1521881626000</date>  
    <title>VIM 精简常用快捷键 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/05/15/Shell/Shell%E8%84%9A%E6%9C%AC%E6%94%BB%E7%95%A5%E7%AC%94%E8%AE%B0/</loc>  
      
    <lastmod>2024-06-17T08:35:15.677Z</lastmod>  
      
    <date>1494834041000</date>  
    <title>Shell脚本攻略笔记 | Mr.Miaow Blog</title>  
      
    <desc>1. 基本命令1.1 shell 格式输出12345678$ echo &#x27;Hello world !&#x27;-n # 忽略结尾的换行符-e # 激活转义字符-E # disable转义字符# echo会将一个换行符追加到输出文本的尾部。可以使用选项-n来忽略结尾的换行符。$ echo -e &quot;1\t2\t3&quot;</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/06/18/Program-C/STL/</loc>  
      
    <lastmod>2024-06-17T08:18:35.499Z</lastmod>  
      
    <date>1466216090000</date>  
    <title>Interview STL | Mr.Miaow Blog</title>  
      
    <desc>STL1. 网站 github . huihut&#x2F;note&#x2F;STL.md cplusplus . stl cppreference . C++ 参考手册 CSDN专栏：STL学习笔记</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/05/10/Program-C/program-c/</loc>  
      
    <lastmod>2024-06-17T08:04:34.682Z</lastmod>  
      
    <date>1462846490000</date>  
    <title>C 基础 | Mr.Miaow Blog</title>  
      
    <desc>C 语言基础1. C 语言概述</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/05/24/Program-C/program-c-advance/</loc>  
      
    <lastmod>2024-06-17T07:56:24.162Z</lastmod>  
      
    <date>1464056090000</date>  
    <title>C 进阶 | Mr.Miaow Blog</title>  
      
    <desc>C 语言进阶1. 内存分区栈区 由系统进行内存的管理。主要存放函数的参数以及局部变量。在函数完成执行，系统自行释放栈区内存，不需要用户管理。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/11/Program-C/multi-thread/</loc>  
      
    <lastmod>2024-06-17T07:32:31.796Z</lastmod>  
      
    <date>1468203290000</date>  
    <title>多线程编程 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/05/01/Program-C/Linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</loc>  
      
    <lastmod>2024-06-17T07:32:15.069Z</lastmod>  
      
    <date>1462068890000</date>  
    <title>Linux系统编程 | Mr.Miaow Blog</title>  
      
    <desc>Linux Note C 语言之解析局部变量返回一般的来说，函数是可以返回局部变量的。 局部变量的作用域只在函数内部，在函数返回后，局部变量的内存已经释放了。因此，如果函数返回的是局部变量的值，不涉及地址，程序不会出错。但是如果返回的是局部变量的地址(指针)的话，程序运行后会出错。因为函数只是把指针复制后返回了，但是指针指向的内容已经被释放了，这样指针指向的内容就是不可预料的内容，调用就会出错。 </desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/15/Program-C/leveldb/</loc>  
      
    <lastmod>2024-06-17T07:24:12.826Z</lastmod>  
      
    <date>1468548890000</date>  
    <title>leveldb原理剖析 | Mr.Miaow Blog</title>  
      
    <desc>在说LevelDb之前，先认识两位大牛，Jeff Dean和Sanjay Ghemawat，这两位是Google公司重量级的工程师，为数甚少的Google Fellow之二。 Jeff Dean其人：http://research.google.com/people/jeff/index.html，Google大规模分布式平台Bigtable和MapReduce主要设计和实现者。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/06/08/Program-C/interview/</loc>  
      
    <lastmod>2024-06-17T07:15:09.292Z</lastmod>  
      
    <date>1465352090000</date>  
    <title>Interview C C++ | Mr.Miaow Blog</title>  
      
    <desc>C&#x2F;C++ 面试知识总结C&#x2F;C++ 面试知识总结，只为复习、分享。部分知识点与图片来自网络，侵删。 勘误新增请 Issue、PR，建议、讨论请 #issues&#x2F;12，排版使用 中文文案排版指北 使用建议： Ctrl + F：快速查找定位知识点 TOC 导航：jawil&#x2F;GayHub 插件快速目录跳转</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/09/03/Program-C/HouJieCPlus/</loc>  
      
    <lastmod>2024-06-17T02:33:10.706Z</lastmod>  
      
    <date>1567506138000</date>  
    <title>侯捷C++讲义 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/29/Other/%E5%AE%9E%E7%94%A8%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B7%A5%E5%85%B7%E5%BA%93/</loc>  
      
    <lastmod>2024-06-17T02:23:26.721Z</lastmod>  
      
    <date>1559096090000</date>  
    <title>实用的计算机工具库 | Mr.Miaow Blog</title>  
      
    <desc>在我们平时的工作过程中，经常会用到各种工具，每次遇到问题都得各种百度搜索，今天给大家带来几个私藏多年的工具库，有了它，你再也不用到处找工具了，里面包含了大量的使用工具。 1. MikuTools网站地址</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/16/Program-C/Cplus%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%9D%8E%E5%BB%BA%E5%BF%A0%E7%AC%94%E8%AE%B0/</loc>  
      
    <lastmod>2024-06-17T02:09:16.435Z</lastmod>  
      
    <date>1468664090000</date>  
    <title>C++设计模式(李建忠视频笔记) | Mr.Miaow Blog</title>  
      
    <desc>【设计模式】C++设计模式（全26讲） 设计模式的软件处理的核心：抽象稳定，隔离变化。实现可扩展、灵活、低耦合、稳定的框架。 1. 设计模式简介目标： 理解松耦合设计思想 掌握面向对象设计原则 掌握重构技法改善设计 掌握GOF 核心设计模式</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/06/28/Program-C/cplus-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-01/</loc>  
      
    <lastmod>2024-06-14T09:14:26.083Z</lastmod>  
      
    <date>1467080090000</date>  
    <title>CPlusPlus 设计模式 | Mr.Miaow Blog</title>  
      
    <desc>【设计模式】C++设计模式（全26讲）</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/05/05/Program-C/compile/</loc>  
      
    <lastmod>2024-06-14T08:56:38.756Z</lastmod>  
      
    <date>1462414490000</date>  
    <title>Program-C 交叉编译 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/06/08/Program-C/c-open-project/</loc>  
      
    <lastmod>2024-06-14T08:53:31.395Z</lastmod>  
      
    <date>1528424090000</date>  
    <title>值得推荐的C/C++框架和库 | Mr.Miaow Blog</title>  
      
    <desc>Webbench是一个在linux下使用的非常简单的网站压测工具。它使用fork()模拟多个客户端同时访问我们设定的URL，测试网站在压力下工作的性能，最多可以模拟3万个并发连接去测试网站的负载能力。Webbench使用C语言编写, 代码实在太简洁，源码加起来不到600行。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/06/Program-C/c-code-opt/</loc>  
      
    <lastmod>2024-06-14T08:39:10.334Z</lastmod>  
      
    <date>1467771290000</date>  
    <title>C 代码优化小贴士 | Mr.Miaow Blog</title>  
      
    <desc>虽然对于优化 C 代码有很多有效的指导方针，但是对于彻底地了解编译器和你工作的机器依然无法取代，通常，加快程序的速度也会加大代码量。这些增加的代码也会影响一个程序的复杂度和可读性，这是不可接受的，比如你在一些小型的设备上编程，例如：移动设备、PDA……，这些有着严格的内存限制，于是，在优化的座右铭是:写代码在内存和速度都应该优化。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/03/Program-C/c-advaced-programming/</loc>  
      
    <lastmod>2024-06-14T07:26:00.720Z</lastmod>  
      
    <date>1467512090000</date>  
    <title>C 语言高级编程指南 | Mr.Miaow Blog</title>  
      
    <desc>1. 整形溢出和提升大部分 C 程序员都以为基本的整形操作都是安全的其实不然,看下面这个例子,</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/06/05/Program-C/algorithm/</loc>  
      
    <lastmod>2024-06-14T07:18:32.297Z</lastmod>  
      
    <date>1465092890000</date>  
    <title>重拾十大经典排序算法 | Mr.Miaow Blog</title>  
      
    <desc>最近在工作中偶然间涉及到数据库的存储和访问，数据库里存放着员工的指纹、年龄以及姓名等信息，当然指纹是通过md5加密存储的。目前需要对员工的年龄、学历、工作年限等进行排序，如果只有几十个上百个样本，应该不会那么麻烦；关键这是几万名员工的数据，这个量很大，马虎不得。悄悄的告诉你，别惹我，我懂得删库跑路哦。 脑海中对排序的记忆有点模糊，只对「归并排序」印象较为深刻，为了加深理解，重拾「数据结构与算法」，</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/06/03/Program-C/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</loc>  
      
    <lastmod>2024-06-14T06:41:43.534Z</lastmod>  
      
    <date>1464920090000</date>  
    <title>数据结构 | Mr.Miaow Blog</title>  
      
    <desc>数据结构概览</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/12/Program-C/libevent/</loc>  
      
    <lastmod>2024-06-14T05:51:11.268Z</lastmod>  
      
    <date>1468289690000</date>  
    <title>处理并发之二：libevent的eventbuffer | Mr.Miaow Blog</title>  
      
    <desc>bufferevent这个结构体</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/07/08/Program-C/linux-epoll/</loc>  
      
    <lastmod>2024-06-14T05:51:11.268Z</lastmod>  
      
    <date>1467944090000</date>  
    <title>处理并发之一：LINUX Epoll 机制介绍 | Mr.Miaow Blog</title>  
      
    <desc>Epoll 可是当前在 Linux 下开发大规模并发网络程序的热门人选，Epoll 在 Linux2.6 内核中正式引入，和 select 相似，其实都 I&#x2F;O 多路复用技术而已，并没有什么神秘的。 其实在 Linux 下设计并发网络程序，向来不缺少方法，比如典型的 Apache 模型（Process Per Connection，简称 PPC），TPC（Thread Per Conne</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/05/13/practical-programming-books/README/</loc>  
      
    <lastmod>2024-06-14T05:49:34.584Z</lastmod>  
      
    <date>1526177690000</date>  
    <title>计算机相关技术资料整理 | Mr.Miaow Blog</title>  
      
    <desc>文章来源 这里收录比较实用的计算机相关技术书籍，可以在短期之内入门的简单实用教程、一些技术网站以及一些写的比较好的博文，欢迎Fork，你也可以通过Pull Request参与编辑。 CSDN 免费下载csdn免积分下载器 其实csdn上资源还是挺多的，如何免积分下载是一个很大的问题 但是有了 http://www.itziy.com/ csdn免积分下载器 工具之后，一切问题迎刃而解 有了 htt</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/03/08/Other/graph/</loc>  
      
    <lastmod>2024-06-14T05:44:50.095Z</lastmod>  
      
    <date>1520503372000</date>  
    <title>计算机算法--图算法介绍 | Mr.Miaow Blog</title>  
      
    <desc>1. 图的定义：图（graph）由顶点（vertex）和边（edge）的集合组成，每一条边就是一个点对（v,w)。 图的种类：地图，电路图，调度图，事物，网络，程序结构 图的属性：有V个顶点的图最多有V*（V-1）&#x2F;2条边</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/04/13/Other/Linux%E5%91%BD%E4%BB%A4eval%E7%9A%84%E7%94%A8%E6%B3%95/</loc>  
      
    <lastmod>2024-06-14T05:41:05.063Z</lastmod>  
      
    <date>1492084219000</date>  
    <title>Linux命令eval的用法 | Mr.Miaow Blog</title>  
      
    <desc>1. eval command-line其中command－line是在终端上键入的一条普通命令行。然而当在它前面放上eval时，其结果是shell在执行命令行之前扫描它两次。如： 123$ pipe=&quot;|&quot;$ eval ls $pipe wc -l shell第1次扫描命令行时，它替换出pipe的值｜，接着eval使它再次扫描命令行，这时shell把｜作为管道符号了。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/02/10/Other/%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%87%BA%E7%8E%B0lib%E5%BA%93%E7%BC%BA%E5%A4%B1%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</loc>  
      
    <lastmod>2024-06-14T05:32:45.028Z</lastmod>  
      
    <date>1581330432000</date>  
    <title>执行文件出现lib库缺失问题解决 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/06/17/Other/%E4%BC%98%E7%A7%80%E7%9A%84Blog%E9%93%BE%E6%8E%A5/</loc>  
      
    <lastmod>2024-06-14T05:31:36.996Z</lastmod>  
      
    <date>1592384297000</date>  
    <title>优秀的Blog链接 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/05/15/Other/%E5%AE%9A%E5%88%B6%E6%94%AF%E6%8C%81%E4%B8%B2%E5%8F%A3%E5%AE%89%E8%A3%85%E7%9A%84ubuntu%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/</loc>  
      
    <lastmod>2024-06-14T05:26:03.413Z</lastmod>  
      
    <date>1494834486000</date>  
    <title>定制支持串口安装的ubuntu系统镜像 | Mr.Miaow Blog</title>  
      
    <desc>1、所需环境：硬件环境： 笔记本 串口调试线缆 光盘 显示器 FWA产品的任一机型（此次使用的是FWA-4210） SATA或者USB光驱×1</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/07/19/Other/tea/</loc>  
      
    <lastmod>2024-06-14T05:24:39.318Z</lastmod>  
      
    <date>1563534890000</date>  
    <title>茶知识 | Mr.Miaow Blog</title>  
      
    <desc>全网销量最高的近20款茶评测,买前看这一篇就够了 喝茶选对时间，比吃保健品有用100倍 喝普洱生茶选大益还是中茶还是下关，有木有推荐？ 请问有哪些茶企在做普洱中期茶？ 花茶搭配养生 六大茶发酵程度根据加工方式和发酵程度的不同，国内现在一般习惯将茶叶分为六大类。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/06/15/Other/RPC%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%8E%9F%E7%90%86/</loc>  
      
    <lastmod>2024-06-14T05:24:39.313Z</lastmod>  
      
    <date>1529048441000</date>  
    <title>RPC机制以及原理 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/31/HTTP/lighttpd-fastcgi/</loc>  
      
    <lastmod>2024-06-14T05:22:42.734Z</lastmod>  
      
    <date>1490934868000</date>  
    <title>lighttpd+fastcgi | Mr.Miaow Blog</title>  
      
    <desc>1. 简介lighttpd 提供了一种外部程序调用的接口，即 FastCGI 接口。这是一种独立于平台和服务器的接口，它介于Web应用程序和Web服务器之间。 这就意味着能够在 Apache 服务器上运行的 FastCGI 程序，也一定可以无缝的在 lighttpd 上使用。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/31/HTTP/lighttpd-%E9%85%8D%E7%BD%AEhttps/</loc>  
      
    <lastmod>2024-06-14T03:26:45.338Z</lastmod>  
      
    <date>1490934868000</date>  
    <title>lighttpd 配置https | Mr.Miaow Blog</title>  
      
    <desc>1. 确定安装的lighttpd支持ssl版本信息中含有（ssl）字样的信息说明支持ssl，可以在终端输入如下查看： 123$ lighttpd -vlighttpd/1.4.35 (ssl) - a light and fast webserverBuild-Date: Apr 25 2017 10:25:18</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/04/06/HTTP/HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/</loc>  
      
    <lastmod>2024-06-14T03:23:12.510Z</lastmod>  
      
    <date>1491464518000</date>  
    <title>HTTP协议详解 | Mr.Miaow Blog</title>  
      
    <desc>HTTP（HyperText Transfer Protocol 超文本传输协议)是互联网上应用最为广泛的一种网络协议，它是由万维网协会（World Wide Web Consortium）制定发布。 文章主要以一次HTTP请求的整个过程来讲解(DNS解析不讲)：HTTP 起源、TCP&#x2F;IP 协议、建立 TCP 连接、客户端请求、服务端响应、断开 TCP 连接，文章最后还捎带讲了与 HT</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/04/12/HTTP/HTTP%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</loc>  
      
    <lastmod>2024-06-14T03:14:00.356Z</lastmod>  
      
    <date>1491982918000</date>  
    <title>HTTP思维导图 | Mr.Miaow Blog</title>  
      
    <desc>文章来自HTTP思维导图。 HTTP mindmap整理 source from 《HTTP权威指南》</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/04/10/HTTP/HTTP%E4%B9%8BCookie%E5%92%8CSession%E5%92%8CToken/</loc>  
      
    <lastmod>2024-06-14T03:09:34.973Z</lastmod>  
      
    <date>1491810118000</date>  
    <title>HTTP--cookie，session，token | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/08/29/Git/GitNote/</loc>  
      
    <lastmod>2024-06-14T03:05:10.714Z</lastmod>  
      
    <date>1598695372000</date>  
    <title>Git note | Mr.Miaow Blog</title>  
      
    <desc>1. Git 原理和常用命令1.1 5 Git workflows you can use to deliver better code and improve your development processI haven’t met a developer who looked at a conflict message and did not pull their hair strands </desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/29/Git/svn-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</loc>  
      
    <lastmod>2024-06-13T11:08:54.511Z</lastmod>  
      
    <date>1490775807000</date>  
    <title>svn 常用操作命令 | Mr.Miaow Blog</title>  
      
    <desc>1. 检出123456$ svn checkout http://路径(目录或文件的全路径) [本地目录全路径] --username 用户名$ svn checkout svn://路径(目录或文件的全路径) [本地目录全路径] --username 用户名# 也可以使用缩写# 例子：$ svn co svn://localhost/测试工具 /home/testtools --username</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/01/27/Git/git-using-standard-process/</loc>  
      
    <lastmod>2024-06-13T11:02:56.944Z</lastmod>  
      
    <date>1485511372000</date>  
    <title>Git使用规范流程 | Mr.Miaow Blog</title>  
      
    <desc>团队开发中，遵循一个合理、清晰的Git使用流程，是非常重要的。 否则，每个人都提交一堆杂乱无章的commit，项目很快就会变得难以协调和维护。 下面是ThoughtBot 的Git使用规范流程。我从中学到了很多，推荐你也这样使用Git。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/01/29/Git/git-submodule/</loc>  
      
    <lastmod>2024-06-13T11:00:11.234Z</lastmod>  
      
    <date>1485684172000</date>  
    <title>使用Git Submodule管理子模块 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/02/27/Git/git-guide/</loc>  
      
    <lastmod>2024-06-13T10:59:13.164Z</lastmod>  
      
    <date>1519725772000</date>  
    <title>Git操作手册|命令速查表 | Mr.Miaow Blog</title>  
      
    <desc>这篇文章主要介绍Git分布式版本管理与集中式管理的一些差异，总结下Git常用命令作为日后的速查表，最后介绍Git进阶的一些案例。本文分为以下几个部分： Git与SVN差异 Git常用命令 Git进阶指南</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/01/27/Git/git-common-list/</loc>  
      
    <lastmod>2024-06-13T10:02:21.757Z</lastmod>  
      
    <date>1485511372000</date>  
    <title>常用Git命令清单 | Mr.Miaow Blog</title>  
      
    <desc>我每天使用 Git ，但是很多命令记不住。 一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/25/FFmpeg/FFmpeg%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84note/</loc>  
      
    <lastmod>2024-06-13T09:55:58.861Z</lastmod>  
      
    <date>1558750490000</date>  
    <title>FFmpeg 源代码结构（编解码解析） | Mr.Miaow Blog</title>  
      
    <desc>特别说明，此文参考至雷神笔记，做一个备忘录。 1. FFmpeg源代码结构图 - 解码下图表明了 FFmpeg 在解码一个视频的时候的函数调用流程。为了保证结构清晰，其中仅列出了最关键的函数，剔除了其它不是特别重要的函数。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/19/FFmpeg/ffmpeg%E5%AE%9E%E6%97%B6%E7%BE%8E%E9%A2%9C%E6%8E%A8%E6%B5%81/</loc>  
      
    <lastmod>2024-06-13T09:47:31.392Z</lastmod>  
      
    <date>1558232090000</date>  
    <title>FFMpeg实时美颜直播推流 | Mr.Miaow Blog</title>  
      
    <desc>有东西被加密了, 请输入密码查看.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/04/20/FFmpeg/FFmpeg%E5%85%A5%E9%97%A8/</loc>  
      
    <lastmod>2024-06-13T08:46:04.848Z</lastmod>  
      
    <date>1555726490000</date>  
    <title>FFmpeg入门 | Mr.Miaow Blog</title>  
      
    <desc>本文以文档的形式来描述FFmpeg怎么入门，这也是为以后写文档做的一个大题框架格式。 1. 文档介绍1.1 文档目的整理出开源代码 ffmpeg 的资料，方便公司同事后续使用。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/04/FFmpeg/FFmpeg%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</loc>  
      
    <lastmod>2024-06-13T08:32:29.976Z</lastmod>  
      
    <date>1556936090000</date>  
    <title>FFmpeg命令大全 | Mr.Miaow Blog</title>  
      
    <desc>1. 前言FFMPEG 是特别强大的专门用于处理音视频的开源库。你既可以使用它的 API 对音视频进行处理，也可以使用它提供的工具，如 ffmpeg, ffplay, ffprobe，来编辑你的音视频文件。 本文将简要介绍一下 FFMPEG 库的基本目录结构及其功能，然后详细介绍一下我们在日常工作中，如何使用 ffmpeg 提供的工具来处理音视频文件。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/27/FFmpeg/FFmpeg%E6%A1%86%E6%9E%B6%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90/</loc>  
      
    <lastmod>2024-06-13T08:24:26.199Z</lastmod>  
      
    <date>1558923290000</date>  
    <title>FFmpeg框架详解 | Mr.Miaow Blog</title>  
      
    <desc>[总结]FFMPEG视音频编解码零基础学习方法 1. 架构图1.1 FFMPEG+SDL的视频播放器 最简单的基于FFMPEG+SDL的视频播放器 ver2 （采用SDL2.0） FFmpeg 解码一个视频流程：</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/04/30/FFmpeg/%E9%9F%B3%E8%A7%86%E9%A2%91%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/</loc>  
      
    <lastmod>2024-06-13T07:12:12.262Z</lastmod>  
      
    <date>1556604890000</date>  
    <title>音视频核心技术 | Mr.Miaow Blog</title>  
      
    <desc>有东西被加密了, 请输入密码查看.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/28/FFmpeg/FFmpeg%E7%9A%84H.264%E8%A7%A3%E7%A0%81%E5%99%A8%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90/</loc>  
      
    <lastmod>2024-06-13T07:11:48.614Z</lastmod>  
      
    <date>1559009690000</date>  
    <title>FFmpeg的H.264解码器源代码简单分析 | Mr.Miaow Blog</title>  
      
    <desc>文章参考汇总至雷神笔记 编码 - x2641. 概述最近正在研究H.264和HEVC的编码方式，因此分析了一下最常见的H.264编码器——x264的源代码。本文简单梳理一下它的结构。X264的源代码量比较大而且涉及到很多的算法，目前还有很多不懂的地方，因此也不能保证分析的完全正确。目前打算先把已经理解的部分整理出来以作备忘。 1.1 函数调用关系图</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/05/18/FFmpeg/FFmpegSDL%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/</loc>  
      
    <lastmod>2024-06-13T06:47:19.613Z</lastmod>  
      
    <date>1558145690000</date>  
    <title>FFMPEG+SDL视频播放器 | Mr.Miaow Blog</title>  
      
    <desc>GitHub FFmpeg ffmpeg 源代码简单分析 1. 100行代码实现最简单的基于FFMPEG+SDL的视频播放器 simplest_ffmpeg_player 该播放器虽然简单，但是几乎包含了使用FFMPEG播放一个视频所有必备的API，并且使用SDL显示解码出来的视频。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/04/23/FFmpeg/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%9F%B3%E8%A7%86%E9%A2%91%E5%85%A5%E9%97%A8/</loc>  
      
    <lastmod>2024-06-13T01:40:57.250Z</lastmod>  
      
    <date>1555985690000</date>  
    <title>音视频入门知识 | Mr.Miaow Blog</title>  
      
    <desc>有东西被加密了, 请输入密码查看.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/12/23/Docker/Docker-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</loc>  
      
    <lastmod>2024-06-11T06:44:03.674Z</lastmod>  
      
    <date>1482459290000</date>  
    <title>Docker 学习笔记 | Mr.Miaow Blog</title>  
      
    <desc>1. Docker基本命令1.1 常用Docker命令</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/01/03/DeepLearning/DogsVsCats/</loc>  
      
    <lastmod>2024-06-11T06:01:09.250Z</lastmod>  
      
    <date>1514945690000</date>  
    <title>Dogs vs Cats (猫狗大战) | Mr.Miaow Blog</title>  
      
    <desc>GitHub 项目地址：Dogs vs Cats (猫狗大战) 项目说明本项目是优达学城的一个毕业项目。项目要求使用深度学习方法识别一张图片是猫还是狗 输入：一张彩色图片 输出：是猫还是狗</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2018/01/13/DeepLearning/note-blog-link/</loc>  
      
    <lastmod>2024-06-11T05:59:18.985Z</lastmod>  
      
    <date>1515809690000</date>  
    <title>机器学习深度学习-文章收藏 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/07/02/Architect/%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF/</loc>  
      
    <lastmod>2024-06-11T05:58:20.075Z</lastmod>  
      
    <date>1562033690000</date>  
    <title>架构师之路 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2019/08/27/Android/android-learn-note/</loc>  
      
    <lastmod>2024-06-11T05:47:18.775Z</lastmod>  
      
    <date>1566900242000</date>  
    <title>Android学习笔记 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/28/Hexo/hexo-operating-guide/</loc>  
      
    <lastmod>2024-06-11T05:40:32.128Z</lastmod>  
      
    <date>1490691226000</date>  
    <title>hexo 使用指南 | Mr.Miaow Blog</title>  
      
    <desc>1. 安装、初始化和配置1.1 准备工作 git node.js github</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/09/22/Netconf/sysrepo-netconf-node/</loc>  
      
    <lastmod>2024-06-11T05:35:03.197Z</lastmod>  
      
    <date>1600775428000</date>  
    <title>netopper2 note | Mr.Miaow Blog</title>  
      
    <desc>Netopper2 安装 环境 centos 1. 基础软件安装</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/09/21/Netconf/netconf-note/</loc>  
      
    <lastmod>2024-06-11T05:28:51.912Z</lastmod>  
      
    <date>1600696228000</date>  
    <title>netconf note | Mr.Miaow Blog</title>  
      
    <desc>Netconf 学习笔记1. Netconf简介随着SDN的大热，一个诞生了十年之久的协议焕发了第二春，它就是NETCONF协议。如果你在两年前去搜索NETCONF协议，基本得到的信息都是“这个协议是一个网管协议，主要目的是弥补SNMP协议的不足，希望可以取代SNMP协议”。SNMP有哪些不足，而NETCONF是否真的能够弥补，这都不是重点，重点是NETCONF诞生至今SNMP依旧活的好好的。所以</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2020/09/23/Netconf/sysrepo-note/</loc>  
      
    <lastmod>2024-06-11T05:20:24.516Z</lastmod>  
      
    <date>1600861828000</date>  
    <title>sysrepo note | Mr.Miaow Blog</title>  
      
    <desc>sysrepo sysrepo - 1.4.2 笔记 1. sysrepo 概述Sysrepo 是 Linux/Unix 系统下一个基于 YANG 模型的配置和操作数据库，为应用程序提供统一的操作数据的接口。应用程序使用 YANG 模型来建模，通过利用 YANG 模型完成数据合法性的检查，保证的风格的一致，不需要应用程序直接操作配置文件的一种数据管理方式。</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/20/Hexo/Hexo-Github-Sync/</loc>  
      
    <lastmod>2024-06-11T02:32:37.979Z</lastmod>  
      
    <date>1489954857000</date>  
    <title>Hexo + Github 博客多终端同步 | Mr.Miaow Blog</title>  
      
    <desc>原文链接 主体的思路是将博文内容相关文件放在Github项目中master中，将Hexo配置写博客用的相关文件放在Github项目的hexo分支上，这个是关键，多终端的同步只需要对分支hexo进行操作。下面是详细的步骤讲解：</desc>  
  </url>  
  
    
  
    
  
    
  
  <url>  
    <loc>http://miaopei.github.io/about/index.html</loc>  
      
    <lastmod>2024-06-05T02:41:22.431Z</lastmod>  
      
    <date>1716876618000</date>  
    <title>Mr.Miaow | Mr.Miaow Blog</title>  
      
    <desc>Everything is going to be alright, maybe not today.</desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2016/12/23/Hexo/Hexo-Next-Configuration/</loc>  
      
    <lastmod>2024-05-29T01:43:23.522Z</lastmod>  
      
    <date>1482459290000</date>  
    <title>Hexo的Next主题个性化设置 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/messages/index.html</loc>  
      
    <lastmod>2024-05-29T01:43:23.522Z</lastmod>  
      
    <date>1716878333000</date>  
    <title>留言板 | Mr.Miaow Blog</title>  
      
    <desc></desc>  
  </url>  
  
    
  
  <url>  
    <loc>http://miaopei.github.io/2017/03/27/Web/nodejs-webpack-vuejs-%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AD%A6%E4%B9%A0%E5%A5%97%E8%B7%AF/</loc>  
      
    <lastmod>2017-03-28T10:25:52.000Z</lastmod>  
      
    <date>1490608972000</date>  
    <title>nodejs+webpack+vuejs 搭建开发环境学习套路 | Mr.Miaow Blog</title>  
      
    <desc>官方文档官方手册 中文官网 vuejs 2.0 中文文档 ECMAScript 6 入门 node.js相关的中文文档及教程 Node.js中文网API Webpack 中文指南 webpack2.2中文文档 以上是提供的一些官方资料，下面开始我们的套路吧：</desc>  
  </url>  
  
    
</urlset>
